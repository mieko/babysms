---
Lint/AmbiguousBlockAssociation:
  Enabled: false
Lint/AmbiguousOperator:
  Description: Checks for ambiguous operators in the first argument of a method invocation
    without parentheses.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#parens-as-args
  Enabled: true
Lint/AmbiguousRegexpLiteral:
  Description: Checks for ambiguous regexp literals in the first argument of a method
    invocation without parenthesis.
  Enabled: false
Lint/AssignmentInCondition:
  Description: Don't use assignment in conditions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#safe-assignment-in-condition
  Enabled: true
  AllowSafeAssignment: false
Lint/BigDecimalNew:
  Description: "`BigDecimal.new()` is deprecated. Use `BigDecimal()` instead."
  Enabled: false
Lint/BooleanSymbol:
  Enabled: false
Lint/CircularArgumentReference:
  Description: Don't refer to the keyword argument in the default value.
  Enabled: false
Lint/Debugger:
  Description: Check for debugger calls.
  Enabled: true
Lint/DeprecatedClassMethods:
  Description: Check for deprecated class method calls.
  Enabled: false
Lint/DuplicateCaseCondition:
  Enabled: false
Lint/DuplicateMethods:
  Description: Check for duplicate methods calls.
  Enabled: true
Lint/DuplicatedKey:
  Description: Check for duplicate keys in hash literals.
  Enabled: true
Lint/EachWithObjectArgument:
  Description: Check for immutable argument given to each_with_object.
  Enabled: false
Lint/ElseLayout:
  Description: Check for odd code arrangement in an else block.
  Enabled: true
Lint/EmptyEnsure:
  Description: Checks for empty ensure block.
  Enabled: false
Lint/EmptyInterpolation:
  Description: Checks for empty string interpolation.
  Enabled: true
Lint/EmptyWhen:
  Enabled: false
Lint/EndInMethod:
  Description: END blocks should not be placed inside method definitions.
  Enabled: false
Lint/EnsureReturn:
  Description: Do not use return in an ensure block.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-return-ensure
  Enabled: false
Lint/ErbNewArguments:
  Enabled: false
Lint/FloatOutOfRange:
  Description: Catches floating-point literals too large or small for Ruby to represent.
  Enabled: false
Lint/FormatParameterMismatch:
  Description: The number of parameters to format/sprint must match the fields.
  Enabled: true
Lint/HandleExceptions:
  Description: Don't suppress exception.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#dont-hide-exceptions
  Enabled: false
Lint/ImplicitStringConcatenation:
  Description: Checks for adjacent string literals on the same line, which could better
    be represented as a single string literal.
  Enabled: true
Lint/IneffectiveAccessModifier:
  Description: Checks for attempts to use `private` or `protected` to set the visibility
    of a class method, which does not work.
  Enabled: true
Lint/InheritException:
  Enabled: true
  EnforcedStyle: standard_error
Lint/InterpolationCheck:
  Enabled: false
Lint/LiteralAsCondition:
  Description: Checks of literals used in conditions.
  Enabled: false
Lint/LiteralInInterpolation:
  Description: Avoid interpolating literals in strings
  Enabled: false
  AutoCorrect: false
Lint/Loop:
  Description: Use Kernel#loop with break rather than begin/end/until or begin/end/while
    for post-loop tests.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#loop-with-break
  Enabled: false
Lint/MissingCopEnableDirective:
  MaximumRangeSize: .inf
  Description: Checks for a `# rubocop:enable` after `# rubocop:disable`
  Enabled: true
Lint/MultipleCompare:
  Enabled: false
Lint/NestedMethodDefinition:
  Description: Do not use nested method definitions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-nested-methods
  Enabled: false
Lint/NextWithoutAccumulator:
  Enabled: false
Lint/NonLocalExitFromIterator:
  Description: Do not use return in iterator to cause non-local exit.
  Enabled: false
Lint/OrderedMagicComments:
  Description: Checks the proper ordering of magic comments and whether a magic comment
    is not placed before a shebang.
  Enabled: true
Lint/ParenthesesAsGroupedExpression:
  Description: Checks for method calls with a space before the opening parenthesis.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#parens-no-spaces
  Enabled: true
Lint/PercentStringArray:
  Description: Checks for unwanted commas and quotes in %w/%W literals.
  Enabled: true
Lint/PercentSymbolArray:
  Enabled: false
Lint/RandOne:
  Description: Checks for `rand(1)` calls. Such calls always return `0` and most likely
    a mistake.
  Enabled: true
Lint/RedundantWithIndex:
  Enabled: false
Lint/RedundantWithObject:
  Enabled: false
Lint/RegexpAsCondition:
  Enabled: false
Lint/RequireParentheses:
  Description: Use parentheses in the method call to avoid confusion about precedence.
  Enabled: true
Lint/RescueException:
  Description: Avoid rescuing the Exception class.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-blind-rescues
  Enabled: true
Lint/RescueType:
  Enabled: false
Lint/ReturnInVoidContext:
  Enabled: false
Lint/SafeNavigationChain:
  Enabled: false
Lint/SafeNavigationConsistency:
  Enabled: false
Lint/ScriptPermission:
  Enabled: false
Lint/ShadowedArgument:
  Description: Avoid reassigning arguments before they were used.
  Enabled: true
Lint/ShadowedException:
  Description: Avoid rescuing a higher level exception before a lower level exception.
  Enabled: false
Lint/ShadowingOuterLocalVariable:
  Description: Do not use the same name as outer local variable for block arguments
    or block local variables.
  Enabled: true
Lint/StringConversionInInterpolation:
  Description: Checks for Object#to_s usage in string interpolation.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-to-s
  Enabled: true
Lint/UnderscorePrefixedVariableName:
  Description: Do not use prefix `_` for a variable that is used.
  Enabled: false
Lint/UnifiedInteger:
  Enabled: false
Lint/UnneededCopDisableDirective:
  Description: 'Checks for rubocop:disable comments that can be removed. Note: this
    cop is not disabled when disabling all cops. It must be explicitly disabled.'
  Enabled: true
Lint/UnneededCopEnableDirective:
  Description: Checks for rubocop:enable comments that can be removed.
  Enabled: true
Lint/UnneededRequireStatement:
  Enabled: false
Lint/UnneededSplatExpansion:
  Enabled: false
Lint/UnreachableCode:
  Description: Unreachable code.
  Enabled: false
Lint/UnusedBlockArgument:
  Description: Checks for unused block arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscore-unused-vars
  Enabled: false
Lint/UnusedMethodArgument:
  Description: Checks for unused method arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscore-unused-vars
  Enabled: false
Lint/UriEscapeUnescape:
  Enabled: false
Lint/UriRegexp:
  Enabled: false
Lint/UselessAccessModifier:
  Description: Checks for useless access modifiers.
  Enabled: true
Lint/UselessAssignment:
  Description: Checks for useless assignment to a local variable.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscore-unused-vars
  Enabled: true
Lint/UselessComparison:
  Description: Checks for comparison of something with itself.
  Enabled: true
Lint/UselessElseWithoutRescue:
  Description: Checks for useless `else` in `begin..end` without `rescue`.
  Enabled: true
Lint/UselessSetterCall:
  Description: Checks for useless setter call to a local variable.
  Enabled: true
Lint/Void:
  Description: Possible use of operator/literal/variable in void context.
  Enabled: false
Bundler/DuplicatedGem:
  Enabled: true
Bundler/InsecureProtocolSource:
  Enabled: false
Bundler/OrderedGems:
  Enabled: false
Rails/ActionFilter:
  Enabled: false
Rails/ActiveRecordAliases:
  Enabled: false
Rails/ActiveSupportAliases:
  Enabled: false
Rails/ApplicationJob:
  Enabled: false
Rails/ApplicationRecord:
  Enabled: false
Rails/AssertNot:
  Enabled: false
Rails/Blank:
  Description: Enforce using `blank?` and `present?`.
  Enabled: true
  NilOrEmpty: true
  NotPresent: true
  UnlessPresent: true
Rails/BulkChangeTable:
  Enabled: false
Rails/CreateTableWithTimestamps:
  Description: Checks the migration for which timestamps are not included when creating
    a new table.
  Enabled: true
Rails/Date:
  Description: Checks the correct usage of date aware methods, such as Date.today,
    Date.current etc.
  Enabled: false
  EnforcedStyle: flexible
  SupportedStyles:
    - strict
    - flexible
Rails/Delegate:
  Description: Prefer delegate method for delegations.
  Enabled: false
Rails/DelegateAllowBlank:
  Enabled: false
Rails/DynamicFindBy:
  Enabled: false
Rails/EnumUniqueness:
  Enabled: false
Rails/EnvironmentComparison:
  Description: Favor `Rails.env.production?` over `Rails.env == 'production'`
  Enabled: true
Rails/Exit:
  Description: Favor `fail`, `break`, `return`, etc. over `exit` in application or
    library code outside of Rake files to avoid exits during unit testing or running
    in production.
  Enabled: false
Rails/FilePath:
  Enabled: false
Rails/FindBy:
  Description: Prefer find_by over where.first.
  Enabled: false
  Include:
    - app/models/**/*.rb
Rails/FindEach:
  Description: Prefer all.find_each over all.find.
  Enabled: false
  Include:
    - app/models/**/*.rb
Rails/HasAndBelongsToMany:
  Description: Prefer has_many :through to has_and_belongs_to_many.
  Enabled: false
  Include:
    - app/models/**/*.rb
Rails/HasManyOrHasOneDependent:
  Enabled: false
Rails/HttpPositionalArguments:
  Enabled: false
Rails/HttpStatus:
  Enabled: false
Rails/InverseOf:
  Description: Checks for associations where the inverse cannot be determined automatically.
  Enabled: false
Rails/LexicallyScopedActionFilter:
  Description: Checks that methods specified in the filter's `only` or `except` options
    are explicitly defined in the controller.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#lexically-scoped-action-filter
  Enabled: false
Rails/NotNullColumn:
  Enabled: false
Rails/Output:
  Description: Checks for calls to puts, print, etc.
  Enabled: false
  Include:
    - app/**/*.rb
    - config/**/*.rb
    - db/**/*.rb
    - lib/**/*.rb
Rails/OutputSafety:
  Description: The use of `html_safe` or `raw` may be a security risk.
  Enabled: false
Rails/PluralizationGrammar:
  Description: Checks for incorrect grammar when using methods like `3.day.ago`.
  Enabled: false
Rails/Presence:
  Description: Checks code that can be written more easily using `Object#presence`
    defined by Active Support.
  Enabled: false
Rails/Present:
  Description: Enforce using `blank?` and `present?`.
  Enabled: true
  NotNilAndNotEmpty: true
  NotBlank: true
  UnlessBlank: true
Rails/ReadWriteAttribute:
  Description: Checks for read_attribute(:attr) and write_attribute(:attr, val).
  Enabled: false
  Include:
    - app/models/**/*.rb
Rails/RedundantReceiverInWithOptions:
  Description: Checks for redundant receiver in `with_options`.
  Enabled: true
Rails/RefuteMethods:
  Enabled: false
Rails/RelativeDateConstant:
  Enabled: false
Rails/RequestReferer:
  Description: Use consistent syntax for request.referer.
  Enabled: false
Rails/ReversibleMigration:
  Enabled: false
Rails/SafeNavigation:
  Enabled: false
Rails/SaveBang:
  Enabled: false
Rails/ScopeArgs:
  Description: Checks the arguments of ActiveRecord scopes.
  Enabled: true
  Include:
    - app/models/**/*.rb
Rails/SkipsModelValidations:
  Enabled: false
Rails/TimeZone:
  Description: Checks the correct usage of time zone aware methods.
  StyleGuide: https://github.com/rubocop-hq/rails-style-guide#time
  Reference: http://danilenko.org/2012/7/6/rails_timezones
  Enabled: false
  EnforcedStyle: flexible
  SupportedStyles:
    - strict
    - flexible
Rails/UniqBeforePluck:
  Enabled: false
Rails/UnknownEnv:
  Enabled: false
Rails/Validation:
  Description: Use validates :attribute, hash of validations.
  Enabled: false
  Include:
    - app/models/**/*.rb
Security/Eval:
  Description: The use of eval represents a serious security risk.
  Enabled: true
Security/JSONLoad:
  Enabled: false
Security/MarshalLoad:
  Enabled: false
Security/Open:
  Description: The use of Kernel#open represents a serious security risk.
  Enabled: false
Security/YAMLLoad:
  Enabled: false
Style/AccessModifierDeclarations:
  Enabled: false
Style/Alias:
  Description: Use alias_method instead of alias.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#alias-method
  Enabled: false
Style/AndOr:
  Description: Use &&/|| instead of and/or.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-and-or-or
  Enabled: true
  EnforcedStyle: always
  SupportedStyles:
    - always
    - conditionals
Style/ArrayJoin:
  Description: Use Array#join instead of Array#*.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#array-join
  Enabled: true
Style/AsciiComments:
  Description: Use only ascii symbols in comments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#english-comments
  Enabled: false
Style/Attr:
  Description: Checks for uses of Module#attr.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#attr
  Enabled: false
Style/AutoResourceCleanup:
  Description: Suggests the usage of an auto resource cleanup version of a method
    (if available).
  Enabled: false
Style/BarePercentLiterals:
  Description: Checks if usage of %() or %Q() matches configuration.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-q-shorthand
  Enabled: false
  EnforcedStyle: bare_percent
  SupportedStyles:
    - percent_q
    - bare_percent
Style/BeginBlock:
  Description: Avoid the use of BEGIN blocks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-BEGIN-blocks
  Enabled: false
Style/BlockComments:
  Description: Do not use block comments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-block-comments
  Enabled: true
Style/BlockDelimiters:
  Description: Check for uses of braces or do/end around single line or multi-line
    blocks.
  Enabled: true
  EnforcedStyle: line_count_based
  SupportedStyles:
    - line_count_based
    - semantic
    - braces_for_chaining
  ProceduralMethods:
    - benchmark
    - bm
    - bmbm
    - create
    - each_with_object
    - measure
    - new
    - realtime
    - tap
    - with_object
  FunctionalMethods:
    - let
    - let!
    - subject
    - watch
  IgnoredMethods:
    - lambda
    - proc
    - it
Style/BracesAroundHashParameters:
  Description: Enforce braces style around hash parameters.
  Enabled: false
  EnforcedStyle: no_braces
  SupportedStyles:
    - braces
    - no_braces
    - context_dependent
Style/CaseEquality:
  Description: Avoid explicit use of the case equality operator(===).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-case-equality
  Enabled: false
Style/CharacterLiteral:
  Description: Checks for uses of character literals.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-character-literals
  Enabled: false
Style/ClassAndModuleChildren:
  Description: Checks style of children classes and modules.
  Enabled: false
  EnforcedStyle: nested
Style/ClassCheck:
  Description: Enforces consistent use of `Object#is_a?` or `Object#kind_of?`.
  Enabled: true
  EnforcedStyle: is_a?
Style/ClassMethods:
  Description: Use self when defining module/class methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#def-self-class-methods
  Enabled: false
Style/ClassVars:
  Description: Avoid the use of class variables.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-class-vars
  Enabled: true
Style/CollectionMethods:
  Description: Preferred collection methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#map-find-select-reduce-size
  Enabled: false
  PreferredMethods:
    collect: map
    collect!: map!
    inject: reduce
    detect: detect
    find: detect
    find_all: select
Style/ColonMethodCall:
  Description: 'Do not use :: for method call.'
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#double-colons
  Enabled: true
Style/ColonMethodDefinition:
  Description: 'Do not use :: for defining class methods.'
  StyleGuide: "#colon-method-definition"
  Enabled: true
Style/CommandLiteral:
  Description: Use `` or %x around command literals.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-x
  Enabled: true
  EnforcedStyle: backticks
  AllowInnerBackticks: false
Style/CommentAnnotation:
  Description: Checks formatting of special comments (TODO, FIXME, OPTIMIZE, HACK,
    REVIEW).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#annotate-keywords
  Enabled: false
  Keywords:
    - TODO
    - FIXME
    - OPTIMIZE
    - HACK
    - REVIEW
Style/CommentedKeyword:
  Enabled: false
Style/ConditionalAssignment:
  Description: Use the return value of `if` and `case` statements for assignment to
    a variable and variable comparison instead of assigning that variable inside of
    each branch.
  Enabled: false
  SingleLineConditionsOnly: true
Style/Copyright:
  Description: Include a copyright notice in each file before any code.
  Enabled: false
  Notice: "^Copyright (\\(c\\) )?2[0-9]{3} .+"
  AutocorrectNotice: ''
Style/DateTime:
  Enabled: false
Style/DefWithParentheses:
  Description: Use def with parentheses when there are arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#method-parens
  Enabled: false
Style/Dir:
  Enabled: false
Style/Documentation:
  Enabled: false
Style/DocumentationMethod:
  Enabled: false
Style/DoubleNegation:
  Description: Checks for uses of double negation (!!).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-bang-bang
  Enabled: false
Style/EachForSimpleLoop:
  Description: Use `Integer#times` for a simple loop which iterates a fixed number
    of times.
  Enabled: true
Style/EachWithObject:
  Description: Prefer `each_with_object` over `inject` or `reduce`.
  Enabled: false
Style/EmptyBlockParameter:
  Description: Omit pipes for empty block parameters.
  Enabled: true
Style/EmptyCaseCondition:
  Enabled: false
Style/EmptyElse:
  Description: Avoid empty else-clauses.
  Enabled: false
  EnforcedStyle: both
  SupportedStyles:
    - empty
    - nil
    - both
Style/EmptyLambdaParameter:
  Description: Omit parens for empty lambda parameters.
  Enabled: true
Style/EmptyLiteral:
  Description: Prefer literals to Array.new/Hash.new/String.new.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#literal-array-hash
  Enabled: true
Style/EmptyMethod:
  Enabled: false
Style/Encoding:
  Description: Use UTF-8 as the source file encoding.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#utf-8
  Enabled: false
Style/EndBlock:
  Description: Avoid the use of END blocks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-END-blocks
  Enabled: false
Style/EvalWithLocation:
  Description: Pass `__FILE__` and `__LINE__` to `eval` method, as they are used by
    backtraces.
  Enabled: false
Style/EvenOdd:
  Description: Favor the use of Fixnum#even? && Fixnum#odd?
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#predicate-methods
  Enabled: false
Style/ExpandPathArguments:
  Description: Use `expand_path(__dir__)` instead of `expand_path('..', __FILE__)`.
  Enabled: false
Style/FlipFlop:
  Description: Checks for flip flops
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-flip-flops
  Enabled: false
Style/For:
  Description: Checks use of for or each in multiline loops.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-for-loops
  Enabled: false
  EnforcedStyle: each
  SupportedStyles:
    - for
    - each
Style/FormatString:
  Description: Enforce the use of Kernel#sprintf, Kernel#format or String#%.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#sprintf
  Enabled: false
  EnforcedStyle: format
  SupportedStyles:
    - format
    - sprintf
    - percent
Style/FormatStringToken:
  Enabled: false
Style/FrozenStringLiteralComment:
  Description: Add the frozen_string_literal comment to the top of files to help transition
    from Ruby 2.3.0 to Ruby 3.0.
  Enabled: false
  EnforcedStyle: when_needed
  SupportedStyles:
    - when_needed
    - always
Style/GlobalVars:
  Description: Do not introduce global variables.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#instance-vars
  Reference: http://www.zenspider.com/Languages/Ruby/QuickRef.html
  Enabled: false
  AllowedVariables: []
Style/GuardClause:
  Enabled: false
Style/HashSyntax:
  Enabled: false
Style/IdenticalConditionalBranches:
  Description: Checks that conditional statements do not have an identical line at
    the end of each branch, which can validly be moved out of the conditional.
  Enabled: false
Style/IfInsideElse:
  Description: Finds if nodes inside else, which can be converted to elsif.
  Enabled: false
Style/IfUnlessModifier:
  Enabled: false
Style/IfUnlessModifierOfIfUnless:
  Description: Checks for if and unless statements used as modifers of other if or
    unless statements.
  Enabled: true
Style/IfWithSemicolon:
  Description: Do not use if x; .... Use the ternary operator instead.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-semicolon-ifs
  Enabled: true
Style/InfiniteLoop:
  Description: Use Kernel#loop for infinite loops.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#infinite-loop
  Enabled: false
Style/InlineComment:
  Description: Avoid inline comments.
  Enabled: false
Style/InverseMethods:
  Enabled: false
Style/Lambda:
  Description: Use the new lambda literal syntax for single-line blocks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#lambda-multi-line
  Enabled: false
Style/LambdaCall:
  Description: Use lambda.call(...) instead of lambda.(...).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#proc-call
  Enabled: true
  EnforcedStyle: call
  SupportedStyles:
    - call
    - braces
Style/LineEndConcatenation:
  Description: Use \ instead of + or << to concatenate two string literals at line
    end.
  Enabled: true
Style/MethodCallWithArgsParentheses:
  Enabled: false
Style/MethodCallWithoutArgsParentheses:
  Description: Do not use parentheses for method calls with no arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-args-no-parens
  Enabled: true
Style/MethodCalledOnDoEndBlock:
  Description: Avoid chaining a method call on a do...end block.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#single-line-blocks
  Enabled: false
Style/MethodDefParentheses:
  Description: Checks if the method definitions have or don't have parentheses.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#method-parens
  Enabled: true
  EnforcedStyle: require_parentheses
  SupportedStyles:
    - require_parentheses
    - require_no_parentheses
Style/MethodMissingSuper:
  Enabled: false
Style/MissingRespondToMissing:
  Enabled: false
Style/MinMax:
  Enabled: false
Style/MissingElse:
  Description: Require if/case expressions to have an else branches. If enabled, it
    is recommended that Style/UnlessElse and Style/EmptyElse be enabled. This will
    conflict with Style/EmptyElse if Style/EmptyElse is configured to style "both"
  Enabled: false
  EnforcedStyle: both
  SupportedStyles:
    - if
    - case
    - both
Style/MixinGrouping:
  Description: This cop checks for grouping of mixins in `class` and `module` bodies.
    By default it enforces mixins to be placed in separate declarations, but it can
    be configured to enforce grouping them in one declaration.
  Enabled: true
Style/MixinUsage:
  Description: This cop checks that `include`, `extend` and `prepend` exists at the
    top level. Using these at the top level affects the behavior of `Object`. There
    will not be using `include`, `extend` and `prepend` at the top level. Let's use
    it inside `class` or `module`.
  Enabled: true
Style/ModuleFunction:
  Description: Checks for usage of `extend self` in modules.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#module-function
  Enabled: false
Style/MultilineBlockChain:
  Description: Avoid multi-line chains of blocks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#single-line-blocks
  Enabled: false
Style/MultilineIfModifier:
  Enabled: true
Style/MultilineIfThen:
  Description: Do not use then for multi-line if/unless.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-then
  Enabled: true
Style/MultilineMemoization:
  Enabled: false
Style/MultilineTernaryOperator:
  Description: 'Avoid multi-line ?: (the ternary operator); use if/unless instead.'
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-multiline-ternary
  Enabled: true
Style/MultipleComparison:
  Enabled: false
Style/MutableConstant:
  Description: Do not assign mutable objects to constants.
  Enabled: true
Style/NegatedIf:
  Description: Favor unless over if for negative conditions (or control flow or).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#unless-for-negatives
  Enabled: false
Style/NegatedWhile:
  Description: Favor until over while for negative conditions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#until-for-negatives
  Enabled: false
Style/NestedModifier:
  Enabled: true
Style/NestedParenthesizedCalls:
  Description: Parenthesize method calls which are nested inside the argument list
    of another parenthesized method call.
  Enabled: true
Style/NestedTernaryOperator:
  Description: Use one expression per branch in a ternary operator.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-nested-ternary
  Enabled: true
Style/Next:
  Description: Use `next` to skip iteration instead of a condition at the end.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-nested-conditionals
  Enabled: false
  EnforcedStyle: skip_modifier_ifs
  MinBodyLength: 3
  SupportedStyles:
    - skip_modifier_ifs
    - always
Style/NilComparison:
  Description: Prefer x.nil? to x == nil.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#predicate-methods
  Enabled: true
Style/NonNilCheck:
  Description: Checks for redundant nil checks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-non-nil-checks
  Enabled: true
  IncludeSemanticChanges: false
Style/Not:
  Description: Use ! instead of not.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#bang-not-not
  Enabled: true
Style/NumericLiteralPrefix:
  EnforcedOctalStyle: zero_with_o
  SupportedOctalStyles:
    - zero_with_o
    - zero_only
  Enabled: true
Style/NumericLiterals:
  Description: Add underscores to large numeric literals to improve their readability.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscores-in-numerics
  Enabled: false
Style/NumericPredicate:
  Enabled: false
Style/OneLineConditional:
  Description: Favor the ternary operator(?:) over if/then/else/end constructs.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#ternary-operator
  Enabled: true
Style/OptionHash:
  Description: Don't use option hashes when you can use keyword arguments.
  Enabled: false
  SuspiciousParamNames:
    - options
    - opts
    - args
    - params
    - parameters
Style/OptionalArguments:
  Description: Checks for optional arguments that do not appear at the end of the
    argument list
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#optional-arguments
  Enabled: true
Style/OrAssignment:
  Enabled: true
Style/ParallelAssignment:
  Description: Check for simple usages of parallel assignment. It will only warn when
    the number of variables matches on both sides of the assignment.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#parallel-assignment
  Enabled: false
Style/ParenthesesAroundCondition:
  Description: Don't use parentheses around the condition of an if/unless/while.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-parens-if
  Enabled: true
  AllowSafeAssignment: true
Style/PercentLiteralDelimiters:
  Description: Use `%`-literal delimiters consistently
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-literal-braces
  Enabled: true
  PreferredDelimiters:
    "%": "()"
    "%i": "()"
    "%q": "()"
    "%Q": "()"
    "%r": "{}"
    "%s": "()"
    "%w": "()"
    "%W": "()"
    "%x": "()"
Style/PercentQLiterals:
  Description: Checks if uses of %Q/%q match the configured preference.
  Enabled: false
  EnforcedStyle: lower_case_q
  SupportedStyles:
    - lower_case_q
    - upper_case_q
Style/PerlBackrefs:
  Description: Avoid Perl-style regex back references.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-perl-regexp-last-matchers
  Enabled: true
Style/PreferredHashMethods:
  Description: Checks for use of deprecated Hash methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#hash-key
  Enabled: true
Style/Proc:
  Description: Use proc instead of Proc.new.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#proc
  Enabled: false
Style/RaiseArgs:
  Description: Checks the arguments passed to raise/fail.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#exception-class-messages
  Enabled: true
  EnforcedStyle: exploded
  SupportedStyles:
    - compact
    - exploded
Style/RandomWithOffset:
  Description: Prefer to use ranges when generating random numbers instead of integers
    with offsets.
  StyleGuide: "#random-numbers"
  Enabled: false
Style/RedundantBegin:
  Description: Don't use begin blocks when they are not needed.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#begin-implicit
  Enabled: true
Style/RedundantConditional:
  Enabled: true
Style/RedundantException:
  Description: Checks for an obsolete RuntimeException argument in raise/fail.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-explicit-runtimeerror
  Enabled: true
Style/RedundantFreeze:
  Description: Checks usages of Object#freeze on immutable objects.
  Enabled: true
Style/RedundantParentheses:
  Description: Checks for parentheses that seem not to serve any purpose.
  Enabled: true
Style/RedundantReturn:
  Description: Don't use return where it's not required.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-explicit-return
  Enabled: true
  AllowMultipleReturnValues: false
Style/RedundantSelf:
  Description: Don't use self where it's not needed.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-self-unless-required
  Enabled: true
Style/RegexpLiteral:
  Description: Use / or %r around regular expressions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-r
  Enabled: false
  EnforcedStyle: slashes
  SupportedStyles:
    - slashes
    - percent_r
    - mixed
  AllowInnerSlashes: false
Style/RescueModifier:
  Description: Avoid using rescue in its modifier form.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-rescue-modifiers
  Enabled: true
Style/RescueStandardError:
  Description: Avoid rescuing without specifying an error class.
  Enabled: false
Style/ReturnNil:
  Enabled: false
Style/SafeNavigation:
  Enabled: false
Style/SelfAssignment:
  Description: Checks for places where self-assignment shorthand should have been
    used.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#self-assignment
  Enabled: true
Style/Semicolon:
  Description: Don't use semicolons to terminate expressions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-semicolon
  Enabled: true
  AllowAsExpressionSeparator: false
Style/Send:
  Description: Prefer `Object#__send__` or `Object#public_send` to `send`, as `send`
    may overlap with existing methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#prefer-public-send
  Enabled: false
Style/SignalException:
  Description: Checks for proper usage of fail and raise.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#fail-method
  Enabled: false
  EnforcedStyle: semantic
  SupportedStyles:
    - only_raise
    - only_fail
    - semantic
Style/SingleLineBlockParams:
  Description: Enforces the names of some block params.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#reduce-blocks
  Enabled: false
  Methods:
    - reduce:
        - a
        - e
    - inject:
        - a
        - e
Style/SingleLineMethods:
  Description: Avoid single-line methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-single-line-methods
  Enabled: true
  AllowIfMethodIsEmpty: true
Style/SpecialGlobalVars:
  Description: Avoid Perl-style global variables.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-cryptic-perlisms
  Enabled: true
Style/StabbyLambdaParentheses:
  Description: Check for the usage of parentheses around stabby lambda arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#stabby-lambda-with-args
  Enabled: false
  EnforcedStyle: require_parentheses
  SupportedStyles:
    - require_parentheses
    - require_no_parentheses
Style/StderrPuts:
  Enabled: true
Style/StringHashKeys:
  Description: Prefer symbols instead of strings as hash keys.
  StyleGuide: "#symbols-as-keys"
  Enabled: false
Style/StringLiterals:
  Enabled: false
Style/StringLiteralsInInterpolation:
  Description: Checks if uses of quotes inside expressions in interpolated strings
    match the configured preference.
  Enabled: false
  EnforcedStyle: single_quotes
  SupportedStyles:
    - single_quotes
    - double_quotes
Style/StringMethods:
  Description: Checks if configured preferred methods are used over non-preferred.
  Enabled: false
  PreferredMethods:
    intern: to_sym
Style/StructInheritance:
  Description: Checks for inheritance from Struct.new.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-extend-struct-new
  Enabled: false
Style/SymbolArray:
  Description: Use %i or %I for arrays of symbols.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-i
  Enabled: false
Style/SymbolLiteral:
  Description: Use plain symbols instead of string symbols when possible.
  Enabled: true
Style/SymbolProc:
  Description: Use symbols as procs instead of blocks when possible.
  Enabled: false
  IgnoredMethods:
    - respond_to
Style/TernaryParentheses:
  Enabled: false
Style/TrailingBodyOnClass:
  Description: Class body goes below class statement.
  Enabled: true
Style/TrailingBodyOnMethodDefinition:
  Description: Method body goes below definition.
  Enabled: true
Style/TrailingBodyOnModule:
  Description: Module body goes below module statement.
  Enabled: true
Style/TrailingCommaInArguments:
  Enabled: false
Style/TrailingCommaInArrayLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma
Style/TrailingCommaInHashLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma
Style/TrailingUnderscoreVariable:
  Description: Checks for the usage of unneeded trailing underscores at the end of
    parallel variable assignment.
  Enabled: false
Style/TrivialAccessors:
  AllowPredicates: true
Style/UnlessElse:
  Description: Do not use unless with else. Rewrite these with the positive case first.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-else-with-unless
  Enabled: true
Style/UnneededCapitalW:
  Description: Checks for %W when interpolation is not needed.
  Enabled: false
Style/UnneededCondition:
  Enabled: false
Style/UnneededInterpolation:
  Description: Checks for strings that are just an interpolated expression.
  Enabled: false
Style/UnneededPercentQ:
  Description: Checks for %q/%Q when single quotes or double quotes would do.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-q
  Enabled: false
Style/UnpackFirst:
  Enabled: false
Style/VariableInterpolation:
  Description: Don't interpolate global, instance and class variables directly in
    strings.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#curlies-interpolate
  Enabled: false
Style/WhenThen:
  Description: Use when x then ... for one-line cases.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#one-line-cases
  Enabled: false
Style/WhileUntilDo:
  Description: Checks for redundant do after while or until.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-multiline-while-do
  Enabled: true
Style/WhileUntilModifier:
  Description: Favor modifier while/until usage when you have a single-line body.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#while-as-a-modifier
  Enabled: false
Style/WordArray:
  Description: Use %w or %W for arrays of words.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-w
  Enabled: false
  MinSize: 0
  WordRegex: !ruby/regexp /\A[\p{Word}]+\z/
Style/YodaCondition:
  Enabled: false
Style/ZeroLengthPredicate:
  Description: 'Use #empty? when testing for objects of length 0.'
  Enabled: false
Performance/Caller:
  Enabled: false
Performance/CaseWhenSplat:
  Description: Place `when` conditions that use splat at the end of the list of `when`
    branches.
  Enabled: false
Performance/Casecmp:
  Description: Use `casecmp` rather than `downcase ==`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringcasecmp-vs-stringdowncase---code
  Enabled: false
Performance/CompareWithBlock:
  Enabled: false
Performance/Count:
  Description: Use `count` instead of `select...size`, `reject...size`, `select...count`,
    `reject...count`, `select...length`, and `reject...length`.
  Enabled: false
Performance/Detect:
  Description: Use `detect` instead of `select.first`, `find_all.first`, `select.last`,
    and `find_all.last`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerabledetect-vs-enumerableselectfirst-code
  Enabled: false
Performance/DoubleStartEndWith:
  Description: Use `str.{start,end}_with?(x, ..., y, ...)` instead of `str.{start,end}_with?(x,
    ...) || str.{start,end}_with?(y, ...)`.
  Enabled: false
Performance/EndWith:
  Description: Use `end_with?` instead of a regex match anchored to the end of a string.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringmatch-vs-stringstart_withstringend_with-code-start-code-end
  Enabled: false
Performance/FixedSize:
  Description: Do not compute the size of statically sized objects except in constants
  Enabled: false
Performance/FlatMap:
  Description: Use `Enumerable#flat_map` instead of `Enumerable#map...Array#flatten(1)`
    or `Enumberable#collect..Array#flatten(1)`
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerablemaparrayflatten-vs-enumerableflat_map-code
  Enabled: false
  EnabledForFlattenWithoutParams: false
Performance/InefficientHashSearch:
  Enabled: false
Performance/LstripRstrip:
  Description: Use `strip` instead of `lstrip.rstrip`.
  Enabled: false
Performance/RangeInclude:
  Description: Use `Range#cover?` instead of `Range#include?`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#cover-vs-include-code
  Enabled: false
Performance/RedundantBlockCall:
  Description: Use `yield` instead of `block.call`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#proccall-vs-yield-code
  Enabled: false
Performance/RedundantMatch:
  Description: Use `=~` instead of `String#match` or `Regexp#match` in a context where
    the returned `MatchData` is not needed.
  Enabled: false
Performance/RedundantMerge:
  Description: Use Hash#[]=, rather than Hash#merge! with a single key-value pair.
  Reference: https://github.com/JuanitoFatas/fast-ruby#hashmerge-vs-hash-code
  Enabled: false
Performance/RedundantSortBy:
  Description: Use `sort` instead of `sort_by { |x| x }`.
  Enabled: false
Performance/RegexpMatch:
  Enabled: false
Performance/ReverseEach:
  Description: Use `reverse_each` instead of `reverse.each`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerablereverseeach-vs-enumerablereverse_each-code
  Enabled: false
Performance/Sample:
  Description: Use `sample` instead of `shuffle.first`, `shuffle.last`, and `shuffle[Fixnum]`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#arrayshufflefirst-vs-arraysample-code
  Enabled: false
Performance/Size:
  Description: Use `size` instead of `count` for counting the number of elements in
    `Array` and `Hash`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#arraycount-vs-arraysize-code
  Enabled: false
Performance/StartWith:
  Description: Use `start_with?` instead of a regex match anchored to the beginning
    of a string.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringmatch-vs-stringstart_withstringend_with-code-start-code-end
  Enabled: false
Performance/StringReplacement:
  Description: Use `tr` instead of `gsub` when you are replacing the same number of
    characters. Use `delete` instead of `gsub` when you are deleting characters.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringgsub-vs-stringtr-code
  Enabled: false
Performance/TimesMap:
  Description: Checks for .times.map calls.
  Enabled: false
Performance/UnfreezeString:
  Enabled: false
Performance/UnneededSort:
  Enabled: false
Performance/UriDefaultParser:
  Enabled: false
Metrics/AbcSize:
  Enabled: false
Metrics/BlockLength:
  Enabled: false
Metrics/BlockNesting:
  Description: Avoid excessive block nesting
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#three-is-the-number-thou-shalt-count
  Enabled: false
  Max: 3
Metrics/ClassLength:
  Enabled: false
Metrics/CyclomaticComplexity:
  Description: A complexity metric that is strongly correlated to the number of test
    cases needed to validate a method.
  Enabled: false
  Max: 6
Metrics/LineLength:
  Max: 100
  AllowURI: true
Metrics/MethodLength:
  Enabled: false
Metrics/ModuleLength:
  Description: Avoid modules longer than 100 lines of code.
  Enabled: false
  CountComments: false
  Max: 100
Metrics/ParameterLists:
  Description: Avoid parameter lists longer than three or four parameters.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#too-many-params
  Enabled: false
  Max: 5
  CountKeywordArgs: true
Metrics/PerceivedComplexity:
  Description: A complexity metric geared towards measuring complexity for a human
    reader.
  Enabled: false
  Max: 7
require:
  - rubocop-rspec
RSpec/AlignLeftLetBrace:
  Description: Checks that left braces for adjacent single line lets are aligned.
  Enabled: false
RSpec/AlignRightLetBrace:
  Description: Checks that right braces for adjacent single line lets are aligned.
  Enabled: false
RSpec/AnyInstance:
  Description: Prefer instance doubles over stubbing any instance of a class
  Enabled: false
RSpec/AroundBlock:
  Description: Checks that around blocks actually run the test.
  Enabled: true
RSpec/Be:
  Description: Check for expectations where `be` is used without argument.
  Enabled: true
RSpec/BeEql:
  Description: Check for expectations where `be(...)` can replace `eql(...)`.
  Enabled: false
RSpec/BeforeAfterAll:
  Description: Check that before/after(:all) isn't being used.
  Enabled: true
  Exclude:
    - spec/spec_helper.rb
    - spec/rails_helper.rb
    - spec/support/**/*.rb
RSpec/ContextWording:
  Description: "`context` block descriptions should start with 'when', or 'with'."
  Enabled: false
RSpec/DescribeClass:
  Description: Check that the first argument to the top level describe is the tested
    class or module.
  Enabled: false
RSpec/DescribeMethod:
  Description: Checks that the second argument to top level describe is the tested
    method name.
  Enabled: false
RSpec/DescribeSymbol:
  Description: Avoid describing symbols.
  Enabled: true
RSpec/DescribedClass:
  Description: Use `described_class` for tested class / module
  Enabled: false
RSpec/EmptyExampleGroup:
  Description: Checks if an example group does not include any tests.
  Enabled: true
  CustomIncludeMethods: []
RSpec/EmptyLineAfterExampleGroup:
  Description: Checks if there is an empty line after example group blocks.
  Enabled: true
RSpec/EmptyLineAfterFinalLet:
  Description: Checks if there is an empty line after the last let block.
  Enabled: true
RSpec/EmptyLineAfterHook:
  Description: Checks if there is an empty line after hook blocks.
  Enabled: true
RSpec/EmptyLineAfterSubject:
  Description: Checks if there is an empty line after subject block.
  Enabled: true
RSpec/ExampleLength:
  Description: A long example is usually more difficult to understand. Consider extracting
    out some behaviour, e.g. with a `let` block, or a helper method.
  Enabled: false
RSpec/ExampleWording:
  Description: Do not use should when describing your tests.
  Enabled: true
  CustomTransform:
    be: is
    have: has
    not: does not
    NOT: does not
    automatically: automatically
    correctly: correctly
    successfully: successfully
    only: only
    properly: properly
    response: responds
    be redirect: redirects
  IgnoredWords: []
RSpec/ExpectActual:
  Description: Checks for `expect(...)` calls containing literal values.
  Enabled: true
  Exclude:
    - spec/routing/**/*
RSpec/ExpectInHook:
  Enabled: true
  Description: Do not use `expect` in hooks such as `before`.
RSpec/ExpectOutput:
  Description: Checks for opportunities to use `expect { ... }.to output`.
  Enabled: false
RSpec/FilePath:
  Description: Checks the file and folder naming of the spec file.
  Enabled: false
  CustomTransform:
    RuboCop: rubocop
    RSpec: rspec
RSpec/Focus:
  Description: Checks if examples are focused.
  Enabled: false
RSpec/HookArgument:
  Description: Checks the arguments passed to `before`, `around`, and `after`.
  Enabled: false
  EnforcedStyle: implicit
  SupportedStyles:
    - implicit
    - each
    - example
RSpec/HooksBeforeExamples:
  Description: Checks for before/around/after hooks that come after an example.
  Enabled: true
RSpec/ImplicitExpect:
  Description: Check that a consistent implicit expectation style is used.
  Enabled: false
  EnforcedStyle: is_expected
  SupportedStyles:
    - is_expected
    - should
RSpec/ImplicitSubject:
  Description: Checks for usage of implicit subject (`is_expected` / `should`).
  Enabled: false
RSpec/InstanceSpy:
  Description: Checks for `instance_double` used with `have_received`.
  Enabled: false
RSpec/InstanceVariable:
  Description: Checks for the usage of instance variables.
  Enabled: false
RSpec/InvalidPredicateMatcher:
  Description: Checks invalid usage for predicate matcher.
  Enabled: false
RSpec/ItBehavesLike:
  Description: Checks that only one `it_behaves_like` style is used.
  Enabled: false
  EnforcedStyle: it_behaves_like
  SupportedStyles:
    - it_behaves_like
    - it_should_behave_like
RSpec/IteratedExpectation:
  Description: Check that `all` matcher is used instead of iterating over an array.
  Enabled: false
RSpec/LeadingSubject:
  Description: Checks for `subject` definitions that come after `let` definitions.
  Enabled: true
RSpec/LetBeforeExamples:
  Description: Checks for `let` definitions that come after an example.
  Enabled: true
RSpec/LetSetup:
  Description: Checks unreferenced `let!` calls being used for test setup.
  Enabled: false
RSpec/MessageChain:
  Description: Check that chains of messages are not being stubbed.
  Enabled: false
RSpec/MessageExpectation:
  Description: Checks for consistent message expectation style.
  Enabled: false
  EnforcedStyle: allow
  SupportedStyles:
    - allow
    - expect
RSpec/MessageSpies:
  Description: Checks that message expectations are set using spies.
  Enabled: false
  EnforcedStyle: have_received
  SupportedStyles:
    - have_received
    - receive
RSpec/MissingExampleGroupArgument:
  Description: Checks that the first argument to an example group is not empty.
  Enabled: true
RSpec/MultipleDescribes:
  Description: Checks for multiple top level describes.
  Enabled: true
RSpec/MultipleExpectations:
  Description: Checks if examples contain too many `expect` calls.
  Enabled: false
  Max: 1
RSpec/MultipleSubjects:
  Description: Checks if an example group defines `subject` multiple times.
  Enabled: true
RSpec/NamedSubject:
  Description: Checks for explicitly referenced test subjects.
  Enabled: false
RSpec/NestedGroups:
  Description: Checks for nested example groups.
  Enabled: false
  Max: 3
RSpec/ReceiveNever:
  Description: Prefer `not_to receive(…)` over `receive(…).never`.
  Enabled: true
RSpec/NotToNot:
  Description: Enforces the usage of the same method on all negative message expectations.
  Enabled: true
  EnforcedStyle: not_to
  SupportedStyles:
    - not_to
    - to_not
RSpec/OverwritingSetup:
  Enabled: false
  Description: Checks if there is a let/subject that overwrites an existing one.
RSpec/Pending:
  Description: Checks for any pending or skipped examples.
  Enabled: false
RSpec/PredicateMatcher:
  Description: Prefer using predicate matcher over using predicate method directly.
  Enabled: false
  Strict: true
  EnforcedStyle: inflected
  SupportedStyles:
    - inflected
    - explicit
RSpec/ReceiveCounts:
  Description: Check for `once` and `twice` receive counts matchers usage.
  Enabled: false
RSpec/RepeatedDescription:
  Description: Check for repeated description strings in example groups.
  Enabled: true
RSpec/RepeatedExample:
  Enabled: true
  Description: Check for repeated examples within example groups.
RSpec/ReturnFromStub:
  Enabled: true
  Description: Checks for consistent style of stub's return setting.
  EnforcedStyle: and_return
  SupportedStyles:
    - and_return
    - block
RSpec/ScatteredLet:
  Description: Checks for let scattered across the example group.
  Enabled: true
RSpec/ScatteredSetup:
  Description: Checks for setup scattered across multiple hooks in an example group.
  Enabled: true
RSpec/SharedContext:
  Description: Checks for proper shared_context and shared_examples usage.
  Enabled: false
RSpec/SharedExamples:
  Description: Enforces use of string to titleize shared examples.
  Enabled: true
RSpec/SingleArgumentMessageChain:
  Description: Checks that chains of messages contain more than one element.
  Enabled: true
RSpec/SubjectStub:
  Description: Checks for stubbed test subjects.
  Enabled: false
RSpec/UnspecifiedException:
  Description: Checks for a specified error in checking raised errors.
  Enabled: false
RSpec/VerifiedDoubles:
  Description: Prefer using verifying doubles over normal doubles.
  Enabled: false
RSpec/VoidExpect:
  Description: This cop checks void `expect()`.
  Enabled: false
Capybara/CurrentPathExpectation:
  Description: Checks that no expectations are set on Capybara's `current_path`.
  Enabled: false
Capybara/FeatureMethods:
  Description: Checks for consistent method usage in feature specs.
  Enabled: false
FactoryBot/AttributeDefinedStatically:
  Description: Always declare attribute values as blocks.
  Enabled: false
FactoryBot/CreateList:
  Description: Checks for create_list usage.
  Enabled: true
Naming/AccessorMethodName:
  Description: Check the naming of accessor methods for get_/set_.
  Enabled: false
Naming/AsciiIdentifiers:
  Description: Use only ascii symbols in identifiers.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#english-identifiers
  Enabled: true
Naming/BinaryOperatorParameterName:
  Description: When defining binary operators, name the argument other.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#other-arg
  Enabled: false
Naming/ClassAndModuleCamelCase:
  Description: Use CamelCase for classes and modules.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#camelcase-classes
  Enabled: true
Naming/ConstantName:
  Description: Constants should use SCREAMING_SNAKE_CASE.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#screaming-snake-case
  Enabled: false
Naming/FileName:
  Description: Use snake_case for source file names.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#snake-case-files
  Enabled: false
Naming/HeredocDelimiterCase:
  Enabled: false
Naming/HeredocDelimiterNaming:
  Enabled: false
Naming/MemoizedInstanceVariableName:
  Description: Memoized method name should match memo instance variable name.
  Enabled: false
Naming/MethodName:
  Description: Use the configured style when naming methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#snake-case-symbols-methods-vars
  Enabled: false
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case
    - camelCase
Naming/PredicateName:
  Description: Check the names of predicate methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#bool-methods-qmark
  Enabled: false
  NamePrefix:
    - is_
    - has_
    - have_
  NamePrefixBlacklist:
    - is_
    - has_
    - have_
Naming/UncommunicativeBlockParamName:
  Description: Checks for block parameter names that contain capital letters, end
    in numbers, or do not meet a minimal length.
  Enabled: false
Naming/UncommunicativeMethodParamName:
  Description: Checks for method parameter names that contain capital letters, end
    in numbers, or do not meet a minimal length.
  Enabled: false
Naming/VariableName:
  Description: Use the configured style when naming variables.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#snake-case-symbols-methods-vars
  Enabled: true
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case
    - camelCase
Naming/VariableNumber:
  Enabled: false
Layout/AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#indent-public-private-protected
  Enabled: true
  EnforcedStyle: indent
  SupportedStyles:
    - outdent
    - indent
Layout/AlignArray:
  Description: Align the elements of an array literal if they span more than one line.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#align-multiline-arrays
  Enabled: true
Layout/AlignHash:
  Description: Align the elements of a hash literal if they span more than one line.
  Enabled: true
  EnforcedHashRocketStyle: key
  EnforcedColonStyle: key
  EnforcedLastArgumentHashStyle: always_inspect
  SupportedLastArgumentHashStyles:
    - always_inspect
    - always_ignore
    - ignore_implicit
    - ignore_explicit
Layout/AlignParameters:
  Description: Align the parameters of a method call if they span more than one line.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-double-indent
  Enabled: true
  EnforcedStyle: with_first_parameter
  SupportedStyles:
    - with_first_parameter
    - with_fixed_indentation
Layout/BlockAlignment:
  Description: Align block ends correctly.
  Enabled: true
Layout/BlockEndNewline:
  Description: Put end statement of multiline block on its own line.
  Enabled: true
Layout/CaseIndentation:
  Description: Indentation of when in a case/when/[else/]end.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#indent-when-to-case
  Enabled: true
  EnforcedStyle: case
  IndentOneStep: false
Layout/ClassStructure:
  Enabled: false
  Categories:
    module_inclusion:
      - include
      - prepend
      - extend
  ExpectedOrder:
    - module_inclusion
    - constants
    - public_class_methods
    - initializer
    - instance_methods
    - protected_methods
    - private_methods
Layout/ClosingHeredocIndentation:
  Enabled: false
Layout/ClosingParenthesisIndentation:
  Description: Checks the indentation of hanging closing parentheses.
  Enabled: true
Layout/CommentIndentation:
  Description: Indentation of comments.
  Enabled: true
Layout/ConditionPosition:
  Description: Checks for condition placed in a confusing position relative to the
    keyword.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#same-line-condition
  Enabled: true
Layout/DefEndAlignment:
  Description: Align ends corresponding to defs correctly.
  Enabled: true
  EnforcedStyleAlignWith: start_of_line
  AutoCorrect: false
Layout/DotPosition:
  Enabled: true
  EnforcedStyle: trailing
Layout/ElseAlignment:
  Description: Align elses and elsifs correctly.
  Enabled: true
Layout/EmptyComment:
  Description: Checks empty comment.
  Enabled: true
Layout/EmptyLineAfterMagicComment:
  Enabled: true
Layout/EmptyLineBetweenDefs:
  Description: Use empty lines between defs.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#empty-lines-between-methods
  Enabled: true
  AllowAdjacentOneLineDefs: false
Layout/EmptyLines:
  Description: Don't use several empty lines in a row.
  Enabled: true
Layout/EmptyLineAfterGuardClause:
  Enabled: false
Layout/EmptyLinesAroundAccessModifier:
  Description: Keep blank lines around access modifiers.
  Enabled: true
Layout/EmptyLinesAroundArguments:
  Description: Keeps track of empty lines around method arguments.
  Enabled: false
Layout/EmptyLinesAroundBeginBody:
  Enabled: true
Layout/EmptyLinesAroundBlockBody:
  Description: Keeps track of empty lines around block bodies.
  Enabled: true
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - empty_lines
    - no_empty_lines
Layout/EmptyLinesAroundClassBody:
  Description: Keeps track of empty lines around class bodies.
  Enabled: true
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - beginning_only
    - empty_lines
    - end_only
    - no_empty_lines
Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Enabled: false
Layout/EmptyLinesAroundMethodBody:
  Description: Keeps track of empty lines around method bodies.
  Enabled: true
Layout/EmptyLinesAroundModuleBody:
  Description: Keeps track of empty lines around module bodies.
  Enabled: true
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - empty_lines
    - no_empty_lines
Layout/EndAlignment:
  Description: Align ends correctly.
  Enabled: true
  EnforcedStyleAlignWith: keyword
  AutoCorrect: false
Layout/EndOfLine:
  Description: Use Unix-style line endings.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#crlf
  Enabled: false
Layout/ExtraSpacing:
  Description: Do not use unnecessary spacing.
  Enabled: true
  AllowForAlignment: true
Layout/FirstArrayElementLineBreak:
  Description: Checks for a line break before the first element in a multi-line array.
  Enabled: true
Layout/FirstHashElementLineBreak:
  Description: Checks for a line break before the first element in a multi-line hash.
  Enabled: true
Layout/FirstMethodArgumentLineBreak:
  Description: Checks for a line break before the first argument in a multi-line method
    call.
  Enabled: false
Layout/FirstMethodParameterLineBreak:
  Description: Checks for a line break before the first parameter in a multi-line
    method parameter definition.
  Enabled: false
Layout/FirstParameterIndentation:
  Description: Checks the indentation of the first parameter in a method call.
  Enabled: true
  EnforcedStyle: consistent
  SupportedStyles:
    - consistent
    - consistent_relative_to_receiver
    - special_for_inner_method_call
    - special_for_inner_method_call_in_parentheses
Layout/IndentArray:
  Description: Checks the indentation of the first element in an array literal.
  Enabled: true
  EnforcedStyle: consistent
Layout/IndentAssignment:
  Description: Checks the indentation of the first line of the right-hand-side of
    a multi-line assignment.
  Enabled: true
  IndentationWidth:
Layout/IndentHash:
  Description: Checks the indentation of the first key in a hash literal.
  Enabled: true
  EnforcedStyle: consistent
  SupportedStyles:
    - special_inside_parentheses
    - consistent
Layout/IndentHeredoc:
  Enabled: false
Layout/IndentationConsistency:
  Description: Keep indentation straight.
  Enabled: true
  EnforcedStyle: normal
  SupportedStyles:
    - normal
    - rails
Layout/IndentationWidth:
  Description: Use 2 spaces for indentation.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-indentation
  Enabled: true
  Width: 2
Layout/InitialIndentation:
  Description: Checks the indentation of the first non-blank non-comment line in a
    file.
  Enabled: true
Layout/LeadingBlankLines:
  Enabled: true
Layout/LeadingCommentSpace:
  Description: Comments should start with a space.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#hash-space
  Enabled: true
Layout/MultilineArrayBraceLayout:
  Description: Checks that the closing brace in an array literal is symmetrical with
    respect to the opening brace and the array elements.
  Enabled: true
Layout/MultilineAssignmentLayout:
  Description: Check for a newline after the assignment operator in multi-line assignments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#indent-conditional-assignment
  Enabled: false
  SupportedTypes:
    - block
    - case
    - class
    - if
    - kwbegin
    - module
  EnforcedStyle: new_line
  SupportedStyles:
    - same_line
    - new_line
Layout/MultilineBlockLayout:
  Description: Ensures newlines after multiline block do statements.
  Enabled: true
Layout/MultilineHashBraceLayout:
  Description: Checks that the closing brace in a hash literal is symmetrical with
    respect to the opening brace and the hash elements.
  Enabled: true
Layout/MultilineMethodCallBraceLayout:
  Description: Checks that the closing brace in a method call is symmetrical with
    respect to the opening brace and the method arguments.
  Enabled: true
  EnforcedStyle: symmetrical
Layout/MultilineMethodCallIndentation:
  Description: Checks indentation of method calls with the dot operator that span
    more than one line.
  Enabled: true
  EnforcedStyle: indented
  SupportedStyles:
    - aligned
    - indented
  IndentationWidth:
Layout/MultilineMethodDefinitionBraceLayout:
  Description: Checks that the closing brace in a method definition is symmetrical
    with respect to the opening brace and the method parametters.
  Enabled: true
Layout/MultilineOperationIndentation:
  Enabled: false
  EnforcedStyle: indented
Layout/RescueEnsureAlignment:
  Description: Align rescues and ensures correctly.
  Enabled: true
Layout/SpaceAfterColon:
  Description: Use spaces after colons.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true
Layout/SpaceAfterComma:
  Description: Use spaces after commas.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true
Layout/SpaceAfterMethodName:
  Description: Do not put a space between a method name and the opening parenthesis
    in a method definition.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#parens-no-spaces
  Enabled: true
Layout/SpaceAfterNot:
  Description: Tracks redundant space after the ! operator.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-space-bang
  Enabled: true
Layout/SpaceAfterSemicolon:
  Description: Use spaces after semicolons.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true
Layout/SpaceAroundBlockParameters:
  Description: Checks the spacing inside and after block parameters pipes.
  Enabled: true
  EnforcedStyleInsidePipes: no_space
Layout/SpaceAroundEqualsInParameterDefault:
  Description: Checks that the equals signs in parameter default assignments have
    or don't have surrounding space depending on configuration.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-around-equals
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space
Layout/SpaceAroundKeyword:
  Description: Use a space around keywords if appropriate.
  Enabled: true
Layout/SpaceAroundOperators:
  Description: Use a single space around operators.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true
  AllowForAlignment: true
Layout/SpaceBeforeBlockBraces:
  Description: Checks that the left block brace has or doesn't have space before it.
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space
Layout/SpaceBeforeComma:
  Description: No spaces before commas.
  Enabled: true
Layout/SpaceBeforeComment:
  Description: Checks for missing space between code and a comment on the same line.
  Enabled: true
Layout/SpaceBeforeFirstArg:
  Description: Put a space between a method name and the first argument in a method
    call without parentheses.
  Enabled: true
Layout/SpaceBeforeSemicolon:
  Description: No spaces before semicolons.
  Enabled: true
Layout/SpaceInLambdaLiteral:
  Enabled: false
Layout/SpaceInsideArrayPercentLiteral:
  Enabled: false
Layout/SpaceInsideBlockBraces:
  Description: Checks that block braces have or don't have surrounding space. For
    blocks taking parameters, checks that the left brace has or doesn't have trailing
    space.
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true
Layout/SpaceInsideParens:
  Description: No spaces after ( or before ).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-spaces-braces
  Enabled: true
Layout/SpaceInsideArrayLiteralBrackets:
  EnforcedStyle: no_space
  SupportedStyles:
    - space
    - no_space
    - compact
  EnforcedStyleForEmptyBrackets: no_space
  SupportedStylesForEmptyBrackets:
    - space
    - no_space
  Enabled: true
Layout/SpaceInsideReferenceBrackets:
  EnforcedStyleForEmptyBrackets: no_space
  SupportedStyles:
    - space
    - no_space
  Enabled: true
Layout/SpaceInsideHashLiteralBraces:
  Description: Use spaces inside hash literal braces - or don't.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SupportedStyles:
    - space
    - no_space
Layout/SpaceInsidePercentLiteralDelimiters:
  Description: No unnecessary spaces inside delimiters of %i/%w/%x literals.
  Enabled: true
Layout/SpaceInsideRangeLiteral:
  Description: No spaces inside range literals.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-space-inside-range-literals
  Enabled: true
Layout/SpaceInsideStringInterpolation:
  Description: Checks for padding/surrounding spaces inside string interpolation.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#string-interpolation
  Enabled: true
  EnforcedStyle: no_space
  SupportedStyles:
    - space
    - no_space
Layout/Tab:
  Description: No hard tabs.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-indentation
  Enabled: true
Layout/TrailingBlankLines:
  Description: Checks trailing blank lines and final newline.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#newline-eof
  Enabled: true
  EnforcedStyle: final_newline
  SupportedStyles:
    - final_newline
    - final_blank_line
Layout/TrailingWhitespace:
  Description: Avoid trailing whitespace.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-trailing-whitespace
  Enabled: true
Gemspec/OrderedDependencies:
  Enabled: false
Gemspec/RequiredRubyVersion:
  Description: Checks that `required_ruby_version` of gemspec and `TargetRubyVersion`
    of .rubocop.yml are equal.
  Enabled: false
  Include:
    - "**/*.gemspec"
